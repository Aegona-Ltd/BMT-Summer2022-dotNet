@using Huy_.NET__baitap2_codeFirst.Helpers;
@model PaginatedList<Huy_.NET__baitap2_codeFirst.Entities.StudentInfo>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "List Student"; 
}
@section Head{
    
}
@section Scripts{
   
}
<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="student" asp-action="index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="keyword" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="index">Back to Full List</a>
        </p>
    </div>
</form>
<table border="1" class="table table-striped table-hover">
    <thead>
        <tr>
                <th>
                    <a asp-action="index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" >LastName</a>
                </th>
                <th>
                    FirstMidName
                </th>
                <th>
                    <a asp-action="index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">EnrollmentDate</a>
                </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>